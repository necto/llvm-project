name: Clang Tests

permissions:
  contents: read

on:
  workflow_dispatch:
  push:
  pull_request:

concurrency:

jobs:
  check_clang:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install sonar-scanner
        uses: SonarSource/sonarcloud-github-c-cpp@v2
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          # A full build of llvm, clang, lld, and lldb takes about 250MB
          # of ccache space. There's not much reason to have more than this,
          # because we usually won't need to save cache entries from older
          # builds.  Also, there is an overall 10GB cache limit, and each
          # run creates a new cache entry so we want to ensure that we have
          # enough cache space for all the tests to run at once and still
          # fit under the 10 GB limit.
          # Default to 2G to workaround: https://github.com/hendrikmuhs/ccache-action/issues/174
          max-size: 2G
          key: clang-build-sonar
          variant: sccache
      - name: Build and Test
        shell: bash
        id: build-llvm
        run: |
          builddir="/mnt/build/"
          mkdir -p $builddir
          echo "llvm-builddir=$builddir" >> "$GITHUB_OUTPUT"
          cmake -G Ninja \
                -B "$builddir" \
                -S llvm \
                -DCMAKE_EXPORT_COMPILE_COMMANDS \
                -DLLVM_ENABLE_PROJECTS="clang;lldb;libclc" \
                -DCMAKE_BUILD_TYPE=Release \
                -DLLVM_ENABLE_ASSERTIONS=ON \
                -DLLDB_INCLUDE_TESTS=OFF \
                -DCMAKE_C_COMPILER_LAUNCHER=sccache \
                -DCMAKE_CXX_COMPILER_LAUNCHER=sccache \
                -DCMAKE_CXX_COMPILER=clang++ \
                -DCMAKE_C_COMPILER=clang
          ninja -C "$builddir" check-clang
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.compile-commands=/mnt/build/compile_commands.json
